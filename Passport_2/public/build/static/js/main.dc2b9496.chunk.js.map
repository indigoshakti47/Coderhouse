{"version":3,"sources":["Components/Sidebar.js","api/product.js","pages/InsertProduct.js","Components/Modal/Modal.js","api/cart.js","pages/Cart.js","router/index.js","router/routes.js","pages/ListProducts.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","withRouter","Nav","className","activeKey","Item","Link","href","insertProduct","productData","a","params","method","headers","body","JSON","stringify","fetch","response","status","json","text","getProductsApi","deleteProductApi","id","url","updateProductApi","Dashboard","useState","nombre","descripcion","codigo","foto","precio","stock","setProductData","submitForm","console","log","Container","fluid","Row","Col","xs","Form","for","type","placeholder","name","value","onChange","e","target","parseInt","Button","onClick","ModalComponent","show","setShow","product","setProducts","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","getCartApi","deleteCartProductApi","addCartProductApi","routes","path","key","exact","component","InsertProduct","auth","editProductId","setEditProductId","useEffect","getProcucts","deleteProducts","index","filter","length","map","Card","style","width","ListGroup","ListGroupItem","src","alt","height","handleShow","cartData","setCartData","productInsert","setProductInsert","newCar","marginBottom","marginTop","products","route","Array","flat","RouterComponent","Component","Router","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc2b9496.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport './Sidebar.css'\r\n\r\nconst Side = () => {\r\n\r\n  return (\r\n    <>\r\n\r\n      <Nav className=\"col-md-12 d-none d-md-block bg-light sidebar\"\r\n        activeKey=\"/\"\r\n      >\r\n        <div className=\"sidebar-sticky\"></div>\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/\">Insertar producto</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/list\">Listar productos</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/cart\">Carrito</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\nconst Sidebar = withRouter(Side);\r\nexport default Sidebar","export async function insertProduct(productData) {\r\n  const url = 'http://localhost:8080/api/productos/agregar'\r\n  \r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(productData)\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, params);\r\n    if (response.status === 200){\r\n      return response.json();\r\n    }\r\n    return response.text();\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\n\r\nexport async function getProductsApi() {\r\n  const url = 'http://localhost:8080/api/productos/listar'\r\n  \r\n  const params = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, params);\r\n    if (response.status === 200){\r\n      return response.json();\r\n    }\r\n    return response.text();\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\n\r\nexport async function deleteProductApi(id) {\r\n  const url = 'http://localhost:8080/api/productos/borrar/' + id\r\n  \r\n  const params = {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, params);\r\n    if (response.status === 200){\r\n      return response.json();\r\n    }\r\n    return response.text();\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\n\r\nexport async function updateProductApi(id, productData) {\r\n  const url = 'http://localhost:8080/api/productos/actualizar/' + id\r\n  \r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(productData)\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, params);\r\n    return response.json();\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport {insertProduct} from \"../api/product\";\r\n\r\nconst Dash = () => {\r\n\r\n  const [productData, setProductData] = useState({\r\n    nombre: \"\",\r\n    descripcion: \"\",\r\n    codigo: \"\",\r\n    foto: \"\",\r\n    precio: 0,\r\n    stock: 0\r\n  })\r\n\r\n  const submitForm = async () => {\r\n    console.log(productData)\r\n    const response = await insertProduct(productData);\r\n\r\n    setProductData({nombre: \"\",\r\n    descripcion: \"\",\r\n    codigo: \"\",\r\n    foto: \"\",\r\n    precio: 0,\r\n    stock: 0})\r\n    console.log(response)\r\n  }\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={2} id=\"sidebar-wrapper\">\r\n            <Sidebar />\r\n          </Col>\r\n          <Col xs={10} id=\"page-content-wrapper\">\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label for=\"Name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  placeholder=\"Nombre\"\r\n                  name=\"title\"\r\n                  value={productData.nombre}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      nombre: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"description\">Descripción</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  placeholder=\"Descripción\"\r\n                  name=\"description\"\r\n                  value={productData.descripcion}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      descripcion: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"codigo\">Código</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"codigo\"\r\n                  placeholder=\"Código\"\r\n                  name=\"codigo\"\r\n                  value={productData.codigo}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      codigo: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"foto\">Foto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"foto\"\r\n                  placeholder=\"Foto\"\r\n                  name=\"foto\"\r\n                  value={productData.foto}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      foto: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"Name\">Precio</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"Precio\"\r\n                  placeholder=\"Precio\"\r\n                  name=\"Precio\"\r\n                  value={productData.precio}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      precio: parseInt(e.target.value)\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"Name\">Stock</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"Stock\"\r\n                  placeholder=\"Stock\"\r\n                  name=\"Stock\"\r\n                  value={productData.stock}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      stock: parseInt(e.target.value)\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                href=\"#p\"\r\n                onClick={() => submitForm()}\r\n              >\r\n                Ingresar producto\r\n              </Button>\r\n              </div>\r\n              \r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nconst Dashboard = withRouter(Dash);\r\nexport default Dashboard","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { updateProductApi, getProductsApi } from \"../../api/product\";\r\n\r\nfunction ModalComponent({show, setShow, product, setProducts}) {\r\n\r\n  const [productData, setProductData] = useState({\r\n    nombre: product.nombre,\r\n    descripcion: product.descripcion,\r\n    codigo: product.codigo,\r\n    foto: product.foto,\r\n    precio: product.precio,\r\n    stock: product.stock\r\n  })\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const submitForm = async () => {\r\n    await updateProductApi(product.id, productData)\r\n    const response = await getProductsApi()\r\n    setProducts(response)\r\n    setShow(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modificar producto {productData.nombre}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n              <div className=\"form-group\">\r\n                <label for=\"Name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  placeholder=\"Nombre\"\r\n                  name=\"title\"\r\n                  value={productData.nombre}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      nombre: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"description\">Descripción</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  placeholder=\"Descripción\"\r\n                  name=\"description\"\r\n                  value={productData.descripcion}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      descripcion: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"codigo\">Código</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"codigo\"\r\n                  placeholder=\"Código\"\r\n                  name=\"codigo\"\r\n                  value={productData.codigo}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      codigo: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"foto\">Foto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"foto\"\r\n                  placeholder=\"Foto\"\r\n                  name=\"foto\"\r\n                  value={productData.foto}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      foto: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"Name\">Precio</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"Precio\"\r\n                  placeholder=\"Precio\"\r\n                  name=\"Precio\"\r\n                  value={productData.precio}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      precio: parseInt(e.target.value)\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"Name\">Stock</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"Stock\"\r\n                  placeholder=\"Stock\"\r\n                  name=\"Stock\"\r\n                  value={productData.stock}\r\n                  onChange={(e) => {\r\n                    setProductData({\r\n                      ...productData,\r\n                      stock: parseInt(e.target.value)\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              \r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => submitForm()}>\r\n            Guardar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalComponent;","export async function getCartApi() {\r\n  const url = 'http://localhost:8080/api/carrito/listar/1'\r\n  \r\n  const params = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, params);\r\n    if (response.status === 200){\r\n      return response.json();\r\n    }\r\n    return response.text();\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\n\r\nexport async function deleteCartProductApi(id) {\r\n  const url = 'http://localhost:8080/api/carrito/borrar/' + id\r\n  \r\n  const params = {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, params);\r\n      return response.json();\r\n    \r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\nexport async function addCartProductApi(id) {\r\n  const url = 'http://localhost:8080/api/carrito/agregar/' + id\r\n  \r\n  const params = {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, params);\r\n      return response.json();\r\n    \r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport { getCartApi, deleteCartProductApi, addCartProductApi } from \"../api/cart\";\r\n\r\nconst Dash = () => {\r\n\r\n  const [cartData, setCartData] = useState(null)\r\n  const [productInsert, setProductInsert] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getProcucts()\r\n  }, [])\r\n\r\n  const getProcucts = async () => {\r\n    const response = await getCartApi();\r\n    setCartData(response)\r\n  }\r\n\r\n  const deleteProducts = async (id) => {\r\n    const response = await deleteCartProductApi(id);\r\n    console.log(response)\r\n    const newCar = await getCartApi();\r\n    setCartData(newCar)\r\n  }\r\n\r\n  const submitForm = async() => {\r\n    await addCartProductApi(productInsert)\r\n    const newCar = await getCartApi();\r\n    setCartData(newCar)\r\n  }\r\n\r\n  console.log(cartData)\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={2} id=\"sidebar-wrapper\">\r\n            <Sidebar />\r\n          </Col>\r\n\r\n          <Col xs={10}>\r\n            <Row style={{marginBottom: \"30px\", marginTop: \"20px\"}}>\r\n              <Col xs={2}>\r\n                <h4>Ingresar producto</h4>\r\n              </Col> \r\n              <Col xs={8}>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                placeholder=\"Ingresa producto\"\r\n                name=\"title\"\r\n                value={productInsert}\r\n                onChange={(e) => setProductInsert(e.target.value)}\r\n              />\r\n              </Col>\r\n              <Col xs={2}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  href=\"#p\"\r\n                  onClick={() => submitForm()}\r\n                >\r\n                  Ingresar producto\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {cartData ? cartData.products.map((product, index) => {\r\n                return (\r\n                  <Col xs={3} id=\"page-content-wrapper\">\r\n                    <Card style={{ width: '18rem' }}>\r\n                      <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem>Id {product.id}</ListGroupItem>\r\n                        <ListGroupItem>Nombre {product.nombre}</ListGroupItem>\r\n                        <ListGroupItem>Descripción {product.descripcion}</ListGroupItem>\r\n                        <ListGroupItem>Código {product.codigo}</ListGroupItem>\r\n                        <ListGroupItem><img src={product.foto} alt=\"image_\" height=\"40px\" /></ListGroupItem>\r\n                        <ListGroupItem>Precio {product.precio}</ListGroupItem>\r\n                        <ListGroupItem>Stock {product.stock}</ListGroupItem>\r\n                      </ListGroup>\r\n                      <Card.Body>\r\n                        <Card.Link href=\"#\" onClick={() => deleteProducts(product.id)}>Eliminar</Card.Link>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                )\r\n              })\r\n                : <h2>No hay productos</h2>\r\n              }\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nconst Dashboard = withRouter(Dash);\r\nexport default Dashboard","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport ROUTES from './routes';\r\n\r\nconst routes = ROUTES.map((route) => {\r\n  if (route.path instanceof Array) {\r\n    return route.path.map((path) => ({\r\n      ...route,\r\n      path,\r\n    }));\r\n  }\r\n  return route;\r\n}).flat();\r\n\r\nconst RouterComponent = ({\r\n  component: Component,\r\n  path,\r\n  exact,\r\n}) => {\r\n\r\n  return <Route component={Component} path={path} exact={exact} />;\r\n};\r\n\r\nconst Router = () => {\r\n  return (\r\n    <Switch>\r\n      {routes.map(({\r\n        exact, key, path, component,\r\n      }) => {\r\n        return (\r\n          <RouterComponent\r\n            key={key}\r\n            exact={exact}\r\n            component={component}\r\n            path={path}\r\n          />\r\n        );\r\n      })}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Router;","import InsertProduct from '../pages/InsertProduct';\r\nimport ListProducts from '../pages/ListProducts';\r\nimport Cart from '../pages/Cart';\r\n\r\n\r\n// Este es un arreglo donde irán todas las rutas de nuestra App ;) - :D\r\nconst ROUTES = [\r\n  {\r\n    path: ['/'], // could be an array or a string\r\n    key: 'INSERT_PRODUCT',\r\n    exact: true,\r\n    component: InsertProduct,\r\n    auth: false,\r\n  },\r\n  {\r\n    path: ['/list'], // could be an array or a string\r\n    key: 'LIST_PRODUCT',\r\n    exact: true,\r\n    component: ListProducts,\r\n    auth: false,\r\n  },\r\n  {\r\n    path: ['/cart'], // could be an array or a string\r\n    key: 'CART',\r\n    exact: true,\r\n    component: Cart,\r\n    auth: false,\r\n  }\r\n];\r\n\r\nexport default ROUTES;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport Modal from \"../Components/Modal/Modal\";\r\nimport { getProductsApi, deleteProductApi } from \"../api/product\";\r\n\r\nconst Dash = () => {\r\n\r\n  const [productData, setProductData] = useState([])\r\n  const [show, setShow] = useState(false);\r\n  const [editProductId, setEditProductId] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProcucts()\r\n  }, [])\r\n\r\n  const handleShow = (index) => {\r\n    setShow(true);\r\n    setEditProductId(index)\r\n  }\r\n\r\n  const getProcucts = async () => {\r\n    const response = await getProductsApi(productData);\r\n    setProductData(response)\r\n  }\r\n\r\n  const deleteProducts = async (id, index) => {\r\n    const response = await deleteProductApi(id);\r\n    console.log(response)\r\n    setProductData(productData.filter(function (product) { return product.id !== id; }))\r\n  }\r\n\r\n  console.log(productData)\r\n  return (\r\n    <>\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={2} id=\"sidebar-wrapper\">\r\n            <Sidebar />\r\n          </Col>\r\n\r\n          <Col xs={10}>\r\n            <Row>\r\n            <Modal show={show} setShow={setShow} product={productData[editProductId]} setProducts={setProductData}/>\r\n              {productData.length > 0 ? productData.map((product, index) => {\r\n                return (\r\n                  <Col xs={3} id=\"page-content-wrapper\">\r\n                    <Card style={{ width: '18rem' }}>\r\n                      <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem>Id {product.id}</ListGroupItem>\r\n                        <ListGroupItem>Nombre {product.nombre}</ListGroupItem>\r\n                        <ListGroupItem>Descripción {product.descripcion}</ListGroupItem>\r\n                        <ListGroupItem>Código {product.codigo}</ListGroupItem>\r\n                        <ListGroupItem><img src={product.foto} alt=\"image_\" height=\"40px\" /></ListGroupItem>\r\n                        <ListGroupItem>Precio {product.precio}</ListGroupItem>\r\n                        <ListGroupItem>Stock {product.stock}</ListGroupItem>\r\n                      </ListGroup>\r\n                      <Card.Body>\r\n                        <Card.Link href=\"#\" onClick={() => handleShow(index)}>Editar</Card.Link>\r\n                        <Card.Link href=\"#\" onClick={() => deleteProducts(product.id, index)}>Eliminar</Card.Link>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                )\r\n              })\r\n                : <h2>No hay productos</h2>\r\n              }\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nconst Dashboard = withRouter(Dash);\r\nexport default Dashboard","import { BrowserRouter } from 'react-router-dom';\n\nimport Router from './router';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Router />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}